# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: CI/CD test automation
run-name:  '${{ github.event.client_payload.service }} ver: ${{ github.event.client_payload.version }} env: ${{ github.event.client_payload.env }} '
on:
  repository_dispatch:
    inputs:
      service: 
        description: 'service name'     
        required: true
      version: 
        description: 'release version'     
        required: true
      env: 
        description: 'env to run test'     
        required: true
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-v${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
         ${{ runner.os }}-node-v${{ matrix.node }}-

    - name: Install Dependencies
      run: npm install

    - name: Run e2e test for ${{ github.event.client_payload.service }} service
      run: npm run test --env=${{ github.event.client_payload.env }} --service=${{ github.event.client_payload.service }} --report
    
    - name: Publish test results
      uses: phoenix-actions/test-reporting@f68b7c5fcffefd98dd230c686cca6c26683668c3
      if: success() || failure()
      id: test-report 
      with: 
        path: './results/data.json'
        name: '${{ github.event.client_payload.service }}/${{ github.event.client_payload.commit }} - test results'
        output-to: step-summary
        reporter: 'mocha-json'
        list-suites: 'all'
        list-tests: 'all'
        max-annotations: '1'

    # - name: Save state
    #   run: |
    #     echo "KEY=VALUE" >>$GITHUB_OUTPUT
    #     echo "::remove-matcher owner=eslint-compact::"
    #     echo "::remove-matcher owner=eslint-stylish::"

    # - name: only on failure
    #   if: failure()
    #   run: echo test failed
    
    - name: Test results
      if: success() || failure()
      run: |
        echo '' >> $GITHUB_STEP_SUMMARY
        echo '### Test results' >> $GITHUB_STEP_SUMMARY
        echo '' >> $GITHUB_STEP_SUMMARY
        echo 'Available: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}' >> $GITHUB_STEP_SUMMARY
    
    - name: Send email notification 
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with: 
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: '${{ github.event.client_payload.service }} ver: ${{ github.event.client_payload.version }} - fails testing'
        body: 'Report available: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
        to: greg.spiewak@fox.com
        from: CI/CD test automation

