# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: CI/CD
run-name: Post deployment test run for ${{ github.event.client_payload.service }} service
on:
  repository_dispatch:
    inputs:
      service: 
        description: 'service name'     
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-v${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
         ${{ runner.os }}-node-v${{ matrix.node }}-
      run: |
        echo "::remove-matcher owner=eslint-compact::"
        echo "::remove-matcher owner=eslint-stylish::"

    - name: Install Dependencies
      run: npm install

    - name: Run e2e test for ${{ github.event.client_payload.service }} service
      run: npm run test --env=qa --service=${{ github.event.client_payload.service }} --report
    
    - name: Publish test results
      uses: phoenix-actions/test-reporting@v8
      id: test-report 
      if: success() || failure()
      with: 
        path: './results/data.json'
        name: '${{ github.event.client_payload.service }} test results'
        reporter: 'mocha-json'
        list-suites: 'all'
        fail-on-error: false
    
    - name: Adding markdown
      run: echo '### Hello world! :rocket:' >> $GITHUB_STEP_SUMMARY
    
    - name: Visit "${{ steps.test-report.outputs.runHtmlUrl }}" to check results
      run: |
        echo "url is ${{ steps.test-report.outputs.runHtmlUrl }}"

